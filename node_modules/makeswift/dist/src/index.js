#!/usr/bin/env node
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const commander_1 = require("commander");
const init_1 = __importDefault(require("./init"));
const package_json_1 = __importDefault(require("../package.json"));
const program = new commander_1.Command();
program
    .name('Makeswift CLI')
    .description('The official command-line tool to interact with Makeswift.')
    .version(package_json_1.default.version);
program
    .command('init', { isDefault: true })
    .description('Create a new Next.js app or integrate an existing one, to use with Makeswift.')
    .argument('[name]', 'The name of the folder to create.')
    .option('--example <example>', 'The Github URL, or name of the Makeswift example to clone.')
    .option('--template <template>', 'The template slug of the Makeswift template to use.')
    .option('--use-npm', 'Explicitly tell the CLI to bootstrap the app using npm')
    .option('--use-pnpm', 'Explicitly tell the CLI to bootstrap the app using pnpm')
    .option('--env <items...>', "Provide environment variables as comma-separated key=value pairs to go into the Next app's .env file.")
    .action(init_1.default);
program.parse();
